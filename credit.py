# -*- coding: utf-8 -*-
"""credit

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uupzf33Xq4MkTFe5d3pQHgVHo5UCIyex
"""

import re

#A função "input_cartao" é responsável por pegar o número do cartão que o usuário digitar,
#remover tudo que não for um número da string,
#colocar em uma lista todos os caracteres da string e
#por fim, transformar a lista de string em uma lista de inteiros e retornar esta lista, para que seja possível realizar operações matemáticas na função "valida_cartao".

def input_cartao():
  numrcard = input("Digite o número do seu cartão: ") #Input que o usuário irá digitar o número do cartão.
  numrcard = re.sub('[^0-9]', '', numrcard) #Retirar tudo que não for um número.
  lista_numrcard = []

  for r in numrcard: #Adicionar o número do cartão do usuário em uma nova lista.
    lista_numrcard.append(r)

  lista_int_numrcard = []
  lista_int_numrcard = [int(i) for i in lista_numrcard] # Acionando novamente em outra lista, mas agora transformando em inteiro.

  return lista_int_numrcard #retornando a lista com os números do cartão em int, permitindo operações matemáticas.

#A função "valida_cartao" é responsável por validar o número do cartão que o usuário digitou na função "input_cartao".
#Primeiro, é contar e pegar os números de trás pra frente, de dois em dois, a partir do penúltimo item da lista e multiplicar por dois.
#Caso o resultado da multiplicação de alguns números seja maior que 9, é feita uma subtração por 9, que é como se fosse a soma dos algoritmos daquele número.
#'Ex= 12: 1 + 2 = 3 | 12 - 9 = 3'.
#Após a multiplicação dos números, eles são adicionados em uma nova lista, lista_numrcard_final, e é feito uma nova contagem na lista anterior para pegar os números que 
#não foram selecionados e adiciona-los nessa nova lista.
#Por fim, é feito uma soma nessa nova lista 'lista_numrcard_final' e, caso o resto da divisão dessa soma por 10 seja 0, o código irá printar a bandeira do cartão.
#Caso o resto não seja 0, o código irá printar "inválido".

def valida_cartao(nmr):
  if len(nmr) < 13 or len(nmr) > 16: #Caso o numéro do cartão seja menor que 13 dígitos ou maior que 16 dígitos, o código irá printar inválido.
    print("inválido")
  else:
    lista_numrcard_final = []
    for r in nmr[-2::-2]: #'for' responsável pela contagem de trás para frente, de dois em dois, a partir do penúltimo número e multiplicar por dois.
      cd2 = r * 2
      if cd2 > 9: #'if else' responsável pela condição do resultado da multiplicação ser '> 9'.
        x = cd2 - 9
        lista_numrcard_final.append(x)
      else:
        lista_numrcard_final.append(cd2)

    for r in nmr[-1::-2]: #'for' responsável por buscar os números não selecionados na primeira contagem e adicionar na 'lista_numrcard_final'.
      lista_numrcard_final.append(r)
      
    if sum(lista_numrcard_final) % 10 == 0: #Caso essa condição seja verdadeira, o código irá printar a bandeira do cartão de acordo com as iniciais de cada cartão.
      if nmr[0] == 4:
        print("VISA")
      elif nmr[0] == 5 and (nmr[1] == 1 or 2 or 3 or 4 or 5):
        print("MASTERCARD")
      elif nmr[0] == 3 and (nmr[1] == 4 or 7):
        print("AMEX")
      else:
        print("inválido")
    else: #Caso seja falsa, o código irá printar "inválido", o que confirma a invalidade do cartão sintaticamente.
      print("inválido")

numero = input_cartao()
valida_cartao(numero)